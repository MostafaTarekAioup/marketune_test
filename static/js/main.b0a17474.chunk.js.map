{"version":3,"sources":["Task/useEffect.js","Task/Loading.js","Task/DataGraph.js","Task/index.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","respond","setProducts","isLoading","setIsLoading","useEffect","axios","get","then","res","products","data","FetchData","Liading","className","DataGraph","chartData","labels","datasets","label","totalClickPoints","totalSharePoints","totalReferrerPoints","totalReferredPoints","totalGiftSharePoints","totalFacebookPoints","totalTwitterPoints","backgroundColor","height","options","title","display","text","fontSize","legend","position","maintainAspectRatio","Index","totalClick","totalShare","totalReferrer","totalReferred","totalGiftShare","totalFacebook","totalTwitter","clickPoints","sharePoints","referrerPoints","referrerdPoints","giftsharePoints","facebookPoints","twitterPoints","map","response","goal_type","goal","points_in","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0a17474.chunk.js","sourcesContent":["import {useState , useEffect} from 'react'\r\nimport axios from 'axios'\r\nexport const useFetch = (url)=>{\r\n const [respond , setProducts] = useState([])\r\n const [isLoading , setIsLoading] = useState(true)\r\n const FetchData = (url)=>{\r\n  axios.get(url)\r\n      .then(res => {\r\n        const products = res.data;\r\n        setProducts(products);\r\n        setIsLoading(false)\r\n      })\r\n }\r\n useEffect(()=>{\r\n  FetchData(url)\r\n },[url])\r\n return {respond , isLoading}\r\n}","import React from 'react'\r\n\r\nconst Liading = () => {\r\n return (\r\n  <div className='loading-container'>\r\n   <h1 className='loading'>Loading Data ....</h1>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Liading\r\n","import React from 'react'\r\nimport {  Pie } from 'react-chartjs-2';\r\nconst DataGraph = ({totalClickPoints ,totalSharePoints , totalReferrerPoints, totalReferredPoints ,totalGiftSharePoints , totalFacebookPoints , totalTwitterPoints}) => {\r\n const chartData = {\r\n  labels : [\"Click\" , \"Share\" , \"Referrer\" , \"Referred\" , \"Gift share\" , \"Facebook\" , \"Twitter\"],\r\n  datasets : [\r\n   {\r\n    label : \"Points In\",\r\n    data :[\r\n      totalClickPoints ,\r\n      totalSharePoints ,\r\n      totalReferrerPoints,\r\n      totalReferredPoints,\r\n      totalGiftSharePoints,\r\n      totalFacebookPoints ,\r\n      totalTwitterPoints\r\n    ],\r\n    backgroundColor: [\r\n                'rgba(255, 99, 132)',\r\n                'rgba(54, 162, 235)',\r\n                'rgba(255, 206, 86)',\r\n                'rgba(75, 192, 192)',\r\n                'rgba(153, 102, 255)',\r\n                'rgba(200, 102, 255)' ,\r\n                'rgba(163, 202, 255)'\r\n            ],\r\n   }\r\n  ]\r\n }\r\n return (\r\n  <div className=\"chart\">\r\n   <Pie\r\n   data={chartData}\r\n   // width={1000}\r\n   height={600}\r\n   options={{ \r\n    \r\n    title : {\r\n     display : true,\r\n     text :\"Data Graph Task\",\r\n     fontSize:25\r\n    },\r\n    legend:{\r\n     display:true,\r\n     position: \"top\"\r\n    },\r\n    maintainAspectRatio: false \r\n    }}/>\r\n   \r\n  </div>\r\n )\r\n}\r\n\r\nexport default DataGraph\r\n","import React  from 'react'\r\nimport {useFetch} from './useEffect'\r\nimport Loadind from './Loading'\r\nimport Datagraph from './DataGraph'\r\nconst url = 'https://marketune-visualization-test.herokuapp.com/getData'\r\nconst Index = () => {\r\n const {respond , isLoading} = useFetch(url)\r\n\r\n // all goals and goals points  decleration\r\n let totalClick = 0\r\n let totalShare = 0\r\n let totalReferrer = 0\r\n let totalReferred = 0\r\n let totalGiftShare = 0\r\n let totalFacebook = 0\r\n let totalTwitter = 0\r\n // points of each goal\r\n let clickPoints = 0\r\n let sharePoints = 0\r\n let referrerPoints = 0\r\n let referrerdPoints = 0\r\n let giftsharePoints = 0\r\n let facebookPoints = 0\r\n let twitterPoints = 0\r\n\r\n // check if loading is finished\r\n\r\n if(isLoading){\r\n  return <Loadind />\r\n }\r\n \r\n  // calculate all goals \r\n respond.map((response)=>{\r\n const {goal_type , goal , points_in } = response\r\n\r\n  // goal_types [click 2 points , share 1 points ,referrer 20 points  ,referred 20 points ,giftshare 15 points]\r\n\r\n if( goal_type && goal_type === \"click\"){\r\n   totalClick = totalClick + 1\r\n   clickPoints = points_in;\r\n  return totalClick \r\n }\r\n if( goal_type && goal_type === \"share\"){\r\n   totalShare = totalShare + 1\r\n   sharePoints = points_in;\r\n  return totalShare \r\n }\r\n if( goal_type && goal_type === \"referrer\"){\r\n   totalReferrer = totalReferrer + 1\r\n   referrerPoints = points_in;\r\n  return totalReferrer \r\n }\r\n if( goal_type && goal_type === \"referred\"){\r\n   totalReferred = totalReferred + 1\r\n   referrerdPoints = points_in;\r\n  return totalReferred \r\n }\r\n if( goal_type && goal_type === \"giftshare\"){\r\n   totalGiftShare = totalGiftShare + 1\r\n   giftsharePoints = points_in;\r\n  return totalGiftShare \r\n }\r\n if( goal_type && goal_type === \"facebook\"){\r\n   totalFacebook = totalFacebook + 1\r\n   facebookPoints = points_in;\r\n  return totalFacebook \r\n }\r\n if( goal_type && goal_type === \"twitter\"){\r\n   totalTwitter = totalTwitter + 1\r\n   twitterPoints = points_in;\r\n  return totalTwitter \r\n }\r\n\r\n\r\n// if !goal_type then search for goal.goal_type\r\n\r\n  if(!goal_type && goal.goal_type === \"click\"){\r\n   // calculate total Clicks \r\n  totalClick = totalClick + 1\r\n  // get the click Points-In  \r\n  clickPoints = goal.points_in;\r\n  return totalClick\r\n }\r\n  if(!goal_type && goal.goal_type === \"share\"){\r\n   // calculate total share \r\n  totalShare = totalShare + 1\r\n  // get the share Points-In  \r\n  sharePoints = goal.points_in;\r\n  return totalShare\r\n }\r\n  if(!goal_type && goal.goal_type === \"referrer\"){\r\n   // calculate total referrer \r\n  totalReferrer = totalReferrer + 1\r\n  // get the referrer Points-In  \r\n  referrerPoints = goal.points_in;\r\n  return totalReferrer\r\n }\r\n  if(!goal_type && goal.goal_type === \"referred\"){\r\n   // calculate total referred \r\n  totalReferred = totalReferred + 1\r\n  // get the referred Points-In   \r\n  referrerdPoints = goal.points_in;\r\n  return totalReferred\r\n }\r\n  if(!goal_type && goal.goal_type === \"giftshare\"){\r\n   // calculate total giftshare \r\n  totalGiftShare = totalGiftShare + 1\r\n  // get the giftshare Points-In   \r\n  giftsharePoints = goal.points_in;\r\n  return totalGiftShare\r\n }\r\n if(!goal_type && goal.goal_type === \"facebook\"){\r\n   // calculate total facebook \r\n  totalFacebook = totalFacebook + 1\r\n  // get the facebook Points-In   \r\n  facebookPoints = goal.points_in;\r\n  return totalFacebook\r\n }\r\n if(!goal_type && goal.goal_type === \"twitter\"){\r\n   // calculate total twitter \r\n  totalTwitter = totalTwitter + 1\r\n  // get the twitter Points-In   \r\n  twitterPoints = goal.points_in;\r\n  return totalTwitter\r\n }\r\n return console.log('No Values')\r\n })\r\n\r\n // calculate total goal points for each goal \r\n let totalClickPoints = totalClick * clickPoints\r\n let totalSharePoints = totalShare * sharePoints\r\n let totalReferrerPoints = totalReferrer * referrerPoints\r\n let totalReferredPoints = totalReferred * referrerdPoints\r\n let totalGiftSharePoints = totalGiftShare * giftsharePoints\r\n let totalFacebookPoints = totalFacebook * facebookPoints\r\n let totalTwitterPoints = totalTwitter * twitterPoints\r\n return (\r\n  <div className='container'>\r\n  <Datagraph\r\n   totalClickPoints = {totalClickPoints} \r\n   totalSharePoints = {totalSharePoints}  \r\n   totalReferrerPoints = {totalReferrerPoints} \r\n   totalReferredPoints = {totalReferredPoints} \r\n   totalGiftSharePoints = {totalGiftSharePoints}\r\n   totalFacebookPoints ={totalFacebookPoints}\r\n   totalTwitterPoints ={totalTwitterPoints}\r\n\r\n   />\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Index\r\n","\nimport './App.css';\nimport Index from './Task'\nfunction App() {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}